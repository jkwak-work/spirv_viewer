lexer grammar SpirvAsmLexer;

// These are all supported lexer sections:

// Lexer file header. Appears at the top of h + cpp files. Use e.g. for copyrights.
@lexer::header {/* lexer header section */}

// Appears before any #include in h + cpp files.
@lexer::preinclude {/* lexer precinclude section */}

// Follows directly after the standard #includes in h + cpp files.
@lexer::postinclude {
/* lexer postinclude section */
#ifndef _WIN32
#pragma GCC diagnostic ignored "-Wunused-parameter"
#endif
}

// Directly preceds the lexer class declaration in the h file (e.g. for additional types etc.).
@lexer::context {/* lexer context section */}

// Appears in the public part of the lexer in the h file.
@lexer::members {/* public lexer declarations section */
bool canTestFoo() { return true; }
bool isItFoo() { return true; }
bool isItBar() { return true; }

void myFooLexerAction() { /* do something*/ };
void myBarLexerAction() { /* do something*/ };
}

// Appears in the private part of the lexer in the h file.
@lexer::declarations {/* private lexer declarations/members section */}

// Appears in line with the other class member definitions in the cpp file.
@lexer::definitions {/* lexer definitions section */}

channels { CommentsChannel, DirectiveChannel }

tokens {
	DUMMY
}

WS: [ \t\r\n]+ -> skip;
COMMENT: ';' ~[\r\n]* -> skip;

OP_EXTENSION: 'OpExtension';
OP_ENTRYPOINT: 'OpEntryPoint';
OP_EXECUTIONMODE: 'OpExecutionMode';
OP_SOURCE: 'OpSource';
OP_NAME: 'OpName';
OP_DECORATE: 'OpDecorate';
OP_MEMBERDECORATE: 'OpMemberDecorate';
OP_TYPEPOINTER: 'OpTypePointer';
OP_CAPABILITY: 'OpCapability';
OP_MEMORYMODEL: 'OpMemoryModel';
OP_VARIABLE: 'OpVariable';
OP_FUNCTION: 'OpFunction';
OP_EXTINST: 'OpExtInst';
OP_LOAD: 'OpLoad';
OP_STORE: 'OpStore';
OP_RETURN: 'OpReturn';
OP_FUNCTIONEND: 'OpFunctionEnd';

CONFLICT_UNIFORM: 'Uniform';
CONFLICT_NONE: 'None';
CONFLICT_VOLATILE: 'Volatile';
CONFLICT_GEOMETRY: 'Geometry';
CONFLICT_KERNEL: 'Kernel';
CONFLICT_DENORM_PRESERVE: 'DenormPreserve';
CONFLICT_DENORM_FLUSH_TO_ZERO: 'DenormFlushToZero';
CONFLICT_SIGNED_ZERO_INF_NAN_PRESERVE: 'SignedZeroInfNanPreserve';
CONFLICT_ROUNDING_MODE_RTE: 'RoundingModeRTE';
CONFLICT_ROUNDING_MODE_RTZ: 'RoundingModeRTZ';
CONFLICT_OPT_NONE_INTEL: 'OptNoneINTEL';
CONFLICT_SHADER_INVOCATION_REORDER_NV: 'ShaderInvocationReorderNV';


DEBUGINFO_INSTRUCTION: 'Debug' [A-Z] [A-Za-z]*;

CAPABILITY: 'Matrix'
    | 'Shader'
    //| 'Geometry'
    | 'Tessellation'
    | 'Addresses'
    | 'Linkage'
    //| 'Kernel'
    | 'Vector16'
    | 'Float16Buffer'
    | 'Float16'
    | 'Float64'
    | 'Int64'
    | 'Int64Atomics'
    | 'ImageBasic'
    | 'ImageReadWrite'
    | 'ImageMipmap'
    | 'Pipes'
    | 'Groups'
    | 'DeviceEnqueue'
    | 'LiteralSampler'
    | 'AtomicStorage'
    | 'Int16'
    | 'TessellationPointSize'
    | 'GeometryPointSize'
    | 'ImageGatherExtended'
    | 'StorageImageMultisample'
    | 'UniformBufferArrayDynamicIndexing'
    | 'SampledImageArrayDynamicIndexing'
    | 'StorageBufferArrayDynamicIndexing'
    | 'StorageImageArrayDynamicIndexing'
    | 'ClipDistance'
    | 'CullDistance'
    | 'ImageCubeArray'
    | 'SampleRateShading'
    | 'ImageRect'
    | 'SampledRect'
    | 'GenericPointer'
    | 'Int8'
    | 'InputAttachment'
    | 'SparseResidency'
    | 'MinLod'
    | 'Sampled1D'
    | 'Image1D'
    | 'SampledCubeArray'
    | 'SampledBuffer'
    | 'ImageBuffer'
    | 'ImageMSArray'
    | 'StorageImageExtendedFormats'
    | 'ImageQuery'
    | 'DerivativeControl'
    | 'InterpolationFunction'
    | 'TransformFeedback'
    | 'GeometryStreams'
    | 'StorageImageReadWithoutFormat'
    | 'StorageImageWriteWithoutFormat'
    | 'MultiViewport'
    | 'SubgroupDispatch'
    | 'NamedBarrier'
    | 'PipeStorage'
    | 'GroupNonUniform'
    | 'GroupNonUniformVote'
    | 'GroupNonUniformArithmetic'
    | 'GroupNonUniformBallot'
    | 'GroupNonUniformShuffle'
    | 'GroupNonUniformShuffleRelative'
    | 'GroupNonUniformClustered'
    | 'GroupNonUniformQuad'
    | 'ShaderLayer'
    | 'ShaderViewportIndex'
    | 'UniformDecoration'
    | 'CoreBuiltinsARM'
    | 'TileImageColorReadAccessEXT'
    | 'TileImageDepthReadAccessEXT'
    | 'TileImageStencilReadAccessEXT'
    | 'FragmentShadingRateKHR'
    | 'SubgroupBallotKHR'
    | 'DrawParameters'
    | 'WorkgroupMemoryExplicitLayoutKHR'
    | 'WorkgroupMemoryExplicitLayout8BitAccessKHR'
    | 'WorkgroupMemoryExplicitLayout16BitAccessKHR'
    | 'SubgroupVoteKHR'
    | 'StorageBuffer16BitAccess'
    | 'StorageUniformBufferBlock16'
    | 'UniformAndStorageBuffer16BitAccess'
    | 'StorageUniform16'
    | 'StoragePushConstant16'
    | 'StorageInputOutput16'
    | 'DeviceGroup'
    | 'MultiView'
    | 'VariablePointersStorageBuffer'
    | 'VariablePointers'
    | 'AtomicStorageOps'
    | 'SampleMaskPostDepthCoverage'
    | 'StorageBuffer8BitAccess'
    | 'UniformAndStorageBuffer8BitAccess'
    | 'StoragePushConstant8'
    //| 'DenormPreserve'
    //| 'DenormFlushToZero'
    //| 'SignedZeroInfNanPreserve'
    //| 'RoundingModeRTE'
    //| 'RoundingModeRTZ'
    | 'RayQueryProvisionalKHR'
    | 'RayQueryKHR'
    | 'RayTraversalPrimitiveCullingKHR'
    | 'RayTracingKHR'
    | 'TextureSampleWeightedQCOM'
    | 'TextureBoxFilterQCOM'
    | 'TextureBlockMatchQCOM'
    | 'Float16ImageAMD'
    | 'ImageGatherBiasLodAMD'
    | 'FragmentMaskAMD'
    | 'StencilExportEXT'
    | 'ImageReadWriteLodAMD'
    | 'Int64ImageEXT'
    | 'ShaderClockKHR'
    | 'ShaderEnqueueAMDX'
    | 'SampleMaskOverrideCoverageNV'
    | 'GeometryShaderPassthroughNV'
    | 'ShaderViewportIndexLayerEXT'
    | 'ShaderViewportIndexLayerNV'
    | 'ShaderViewportMaskNV'
    | 'ShaderStereoViewNV'
    | 'PerViewAttributesNV'
    | 'FragmentFullyCoveredEXT'
    | 'MeshShadingNV'
    | 'ImageFootprintNV'
    | 'MeshShadingEXT'
    | 'FragmentBarycentricKHR'
    | 'FragmentBarycentricNV'
    | 'ComputeDerivativeGroupQuadsNV'
    | 'FragmentDensityEXT'
    | 'ShadingRateNV'
    | 'GroupNonUniformPartitionedNV'
    | 'ShaderNonUniform'
    | 'ShaderNonUniformEXT'
    | 'RuntimeDescriptorArray'
    | 'RuntimeDescriptorArrayEXT'
    | 'InputAttachmentArrayDynamicIndexing'
    | 'InputAttachmentArrayDynamicIndexingEXT'
    | 'UniformTexelBufferArrayDynamicIndexing'
    | 'UniformTexelBufferArrayDynamicIndexingEXT'
    | 'StorageTexelBufferArrayDynamicIndexing'
    | 'StorageTexelBufferArrayDynamicIndexingEXT'
    | 'UniformBufferArrayNonUniformIndexing'
    | 'UniformBufferArrayNonUniformIndexingEXT'
    | 'SampledImageArrayNonUniformIndexing'
    | 'SampledImageArrayNonUniformIndexingEXT'
    | 'StorageBufferArrayNonUniformIndexing'
    | 'StorageBufferArrayNonUniformIndexingEXT'
    | 'StorageImageArrayNonUniformIndexing'
    | 'StorageImageArrayNonUniformIndexingEXT'
    | 'InputAttachmentArrayNonUniformIndexing'
    | 'InputAttachmentArrayNonUniformIndexingEXT'
    | 'UniformTexelBufferArrayNonUniformIndexing'
    | 'UniformTexelBufferArrayNonUniformIndexingEXT'
    | 'StorageTexelBufferArrayNonUniformIndexing'
    | 'StorageTexelBufferArrayNonUniformIndexingEXT'
    | 'RayTracingPositionFetchKHR'
    | 'RayTracingNV'
    | 'RayTracingMotionBlurNV'
    | 'VulkanMemoryModel'
    | 'VulkanMemoryModelKHR'
    | 'VulkanMemoryModelDeviceScope'
    | 'VulkanMemoryModelDeviceScopeKHR'
    | 'PhysicalStorageBufferAddresses'
    | 'PhysicalStorageBufferAddressesEXT'
    | 'ComputeDerivativeGroupLinearNV'
    | 'RayTracingProvisionalKHR'
    | 'CooperativeMatrixNV'
    | 'FragmentShaderSampleInterlockEXT'
    | 'FragmentShaderShadingRateInterlockEXT'
    | 'ShaderSMBuiltinsNV'
    | 'FragmentShaderPixelInterlockEXT'
    | 'DemoteToHelperInvocation'
    | 'DemoteToHelperInvocationEXT'
    | 'DisplacementMicromapNV'
    | 'RayTracingOpacityMicromapEXT'
    //| 'ShaderInvocationReorderNV'
    | 'BindlessTextureNV'
    | 'RayQueryPositionFetchKHR'
    | 'RayTracingDisplacementMicromapNV'
    | 'SubgroupShuffleINTEL'
    | 'SubgroupBufferBlockIOINTEL'
    | 'SubgroupImageBlockIOINTEL'
    | 'SubgroupImageMediaBlockIOINTEL'
    | 'RoundToInfinityINTEL'
    | 'FloatingPointModeINTEL'
    | 'IntegerFunctions2INTEL'
    | 'FunctionPointersINTEL'
    | 'IndirectReferencesINTEL'
    | 'AsmINTEL'
    | 'AtomicFloat32MinMaxEXT'
    | 'AtomicFloat64MinMaxEXT'
    | 'AtomicFloat16MinMaxEXT'
    | 'VectorComputeINTEL'
    | 'VectorAnyINTEL'
    | 'ExpectAssumeKHR'
    | 'SubgroupAvcMotionEstimationINTEL'
    | 'SubgroupAvcMotionEstimationIntraINTEL'
    | 'SubgroupAvcMotionEstimationChromaINTEL'
    | 'VariableLengthArrayINTEL'
    | 'FunctionFloatControlINTEL'
    | 'FPGAMemoryAttributesINTEL'
    | 'FPFastMathModeINTEL'
    | 'ArbitraryPrecisionIntegersINTEL'
    | 'ArbitraryPrecisionFloatingPointINTEL'
    | 'UnstructuredLoopControlsINTEL'
    | 'FPGALoopControlsINTEL'
    | 'KernelAttributesINTEL'
    | 'FPGAKernelAttributesINTEL'
    | 'FPGAMemoryAccessesINTEL'
    | 'FPGAClusterAttributesINTEL'
    | 'LoopFuseINTEL'
    | 'FPGADSPControlINTEL'
    | 'MemoryAccessAliasingINTEL'
    | 'FPGAInvocationPipeliningAttributesINTEL'
    | 'FPGABufferLocationINTEL'
    | 'ArbitraryPrecisionFixedPointINTEL'
    | 'USMStorageClassesINTEL'
    | 'RuntimeAlignedAttributeINTEL'
    | 'IOPipesINTEL'
    | 'BlockingPipesINTEL'
    | 'FPGARegINTEL'
    | 'DotProductInputAll'
    | 'DotProductInputAllKHR'
    | 'DotProductInput4x8Bit'
    | 'DotProductInput4x8BitKHR'
    | 'DotProductInput4x8BitPacked'
    | 'DotProductInput4x8BitPackedKHR'
    | 'DotProduct'
    | 'DotProductKHR'
    | 'RayCullMaskKHR'
    | 'CooperativeMatrixKHR'
    | 'BitInstructions'
    | 'GroupNonUniformRotateKHR'
    | 'AtomicFloat32AddEXT'
    | 'AtomicFloat64AddEXT'
    | 'LongConstantCompositeINTEL'
    //| 'OptNoneINTEL'
    | 'AtomicFloat16AddEXT'
    | 'DebugInfoModuleINTEL'
    | 'BFloat16ConversionINTEL'
    | 'SplitBarrierINTEL'
    | 'GlobalVariableFPGADecorationsINTEL'
    | 'FPGAKernelAttributesv2INTEL'
    | 'GlobalVariableHostAccessINTEL'
    | 'FPMaxErrorINTEL'
    | 'FPGALatencyControlINTEL'
    | 'FPGAArgumentInterfacesINTEL'
    | 'GroupUniformArithmeticKHR'
    | 'CacheControlsINTEL'
    ;

ADDRESSING_MODEL: 'Logical'
    | 'Physical32'
	| 'Physical64'
	| 'PhysicalStorageBuffer64'
	| 'PhysicalStorageBuffer64EXT'
	;

MEMORY_MODEL: 'Simple'
    | 'GLSL450'
	| 'OpenCL'
	| 'Vulkan'
	| 'VulkanKHR'
	;

EXECUTION_MODEL: 'Vertex'
    | 'TessellationControl'
	| 'TessellationEvaluation'
	//| 'Geometry'
	| 'Fragment'
	| 'GLCompute'
	//| 'Kernel'
	| 'TaskNV'
	| 'MeshNV'
	| 'RayGenerationNV'
	| 'RayGenerationKHR'
	| 'IntersectionNV'
	| 'IntersectionKHR'
	| 'AnyHitNV'
	| 'AnyHitKHR'
	| 'ClosestHitNV'
	| 'ClosestHitKHR'
	| 'MissNV'
	| 'MissKHR'
	| 'CallableNV'
	| 'CallableKHR'
	| 'TaskEXT'
	| 'MeshEXT'
	;

EXECUTION_MODE: 'Invocations'
    | 'SpacingEqual'
    | 'SpacingFractionalEven'
    | 'SpacingFractionalOdd'
    | 'VertexOrderCw'
    | 'VertexOrderCcw'
    | 'PixelCenterInteger'
    | 'OriginUpperLeft'
    | 'OriginLowerLeft'
    | 'EarlyFragmentTests'
    | 'PointMode'
    | 'Xfb'
    | 'DepthReplacing'
    | 'DepthGreater'
    | 'DepthLess'
    | 'DepthUnchanged'
    | 'LocalSize'
    | 'LocalSizeHint'
    | 'InputPoints'
    | 'InputLines'
    | 'InputLinesAdjacency'
    | 'Triangles'
    | 'InputTrianglesAdjacency'
    | 'Quads'
    | 'Isolines'
    | 'OutputVertices'
    | 'OutputPoints'
    | 'OutputLineStrip'
    | 'OutputTriangleStrip'
    | 'VecTypeHint'
    | 'ContractionOff'
    | 'Initializer'
    | 'Finalizer'
    | 'SubgroupSize'
    | 'SubgroupsPerWorkgroup'
    | 'SubgroupsPerWorkgroupId'
    | 'LocalSizeId'
    | 'LocalSizeHintId'
    | 'NonCoherentColorAttachmentReadEXT'
    | 'NonCoherentDepthAttachmentReadEXT'
    | 'NonCoherentStencilAttachmentReadEXT'
    | 'SubgroupUniformControlFlowKHR'
    | 'PostDepthCoverage'
    //| 'DenormPreserve'
    //| 'DenormFlushToZero'
    //| 'SignedZeroInfNanPreserve'
    //| 'RoundingModeRTE'
    //| 'RoundingModeRTZ'
    | 'EarlyAndLateFragmentTestsAMD'
    | 'StencilRefReplacingEXT'
    | 'CoalescingAMDX'
    | 'MaxNodeRecursionAMDX'
    | 'StaticNumWorkgroupsAMDX'
    | 'ShaderIndexAMDX'
    | 'MaxNumWorkgroupsAMDX'
    | 'StencilRefUnchangedFrontAMD'
    | 'StencilRefGreaterFrontAMD'
    | 'StencilRefLessFrontAMD'
    | 'StencilRefUnchangedBackAMD'
    | 'StencilRefGreaterBackAMD'
    | 'StencilRefLessBackAMD'
    | 'OutputLinesNV'
    | 'OutputLinesEXT'
    | 'OutputPrimitivesNV'
    | 'OutputPrimitivesEXT'
    | 'DerivativeGroupQuadsNV'
    | 'DerivativeGroupLinearNV'
    | 'OutputTrianglesNV'
    | 'OutputTrianglesEXT'
    | 'PixelInterlockOrderedEXT'
    | 'PixelInterlockUnorderedEXT'
    | 'SampleInterlockOrderedEXT'
    | 'SampleInterlockUnorderedEXT'
    | 'ShadingRateInterlockOrderedEXT'
    | 'ShadingRateInterlockUnorderedEXT'
    | 'SharedLocalMemorySizeINTEL'
    | 'RoundingModeRTPINTEL'
    | 'RoundingModeRTNINTEL'
    | 'FloatingPointModeALTINTEL'
    | 'FloatingPointModeIEEEINTEL'
    | 'MaxWorkgroupSizeINTEL'
    | 'MaxWorkDimINTEL'
    | 'NoGlobalOffsetINTEL'
    | 'NumSIMDWorkitemsINTEL'
    | 'SchedulerTargetFmaxMhzINTEL'
    | 'StreamingInterfaceINTEL'
    | 'RegisterMapInterfaceINTEL'
    | 'NamedBarrierCountINTEL'
    ;

SOURCE_LANGUAGE: 'Unknown'
    | 'ESSL'
	| 'GLSL'
	| 'OpenCL_C'
	| 'OpenCL_CPP'
	| 'HLSL'
	| 'CPP_for_OpenCL'
	| 'SYCL'
	| 'HERO_C'
	| 'NZSL'
	| 'WGSL'
    | 'Slang'
	;

FUNCTION_CONTROL: //'None'
    'Inline'
    | 'DontInline'
    | 'Pure'
    | 'Const'
    //| 'OptNoneINTEL'
	;

MEMORY_OPERANDS: // 'None'
    //| 'Volatile'
	'Aligned'
	| 'Nontemporal'
	| 'MakePointerAvailable'
	| 'MakePointerAvailableKHR'
	| 'MakePointerVisible'
	| 'MakePointerVisibleKHR'
	| 'NonPrivatePointer'
	| 'NonPrivatePointerKHR'
	| 'AliasScopeINTELMask'
	| 'NoAliasINTELMask'
	;

STORAGE_CLASS: 'UniformConstant'
    | 'Input'
	// | 'Uniform'
    | 'Output'
    | 'Workgroup'
    | 'CrossWorkgroup'
    | 'Private'
    | 'Function'
    | 'Generic'
    | 'PushConstant'
    | 'AtomicCounter'
    | 'Image'
    | 'StorageBuffer'
    | 'TileImageEXT'
    | 'NodePayloadAMDX'
    | 'NodeOutputPayloadAMDX'
    | 'CallableDataNV'
    | 'CallableDataKHR'
    | 'IncomingCallableDataNV'
    | 'IncomingCallableDataKHR'
    | 'RayPayloadNV'
    | 'RayPayloadKHR'
    | 'HitAttributeNV'
    | 'HitAttributeKHR'
    | 'IncomingRayPayloadNV'
    | 'IncomingRayPayloadKHR'
    | 'ShaderRecordBufferNV'
    | 'ShaderRecordBufferKHR'
    | 'PhysicalStorageBuffer'
    | 'PhysicalStorageBufferEXT'
    | 'HitObjectAttributeNV'
    //| 'ShaderInvocationReorderNV'
    | 'TaskPayloadWorkgroupEXT'
    | 'CodeSectionINTEL'
    | 'DeviceOnlyINTEL'
    | 'HostOnlyINTEL'
    ;

DECORATION: 'RelaxedPrecision'
    | 'SpecId'
    | 'Block'
    | 'BufferBlock'
    | 'RowMajor'
    | 'ColMajor'
    | 'ArrayStride'
    | 'MatrixStride'
    | 'GLSLShared'
    | 'GLSLPacked'
    | 'CPacked'
    | 'BuiltIn'
    | 'NoPerspective'
    | 'Flat'
    | 'Patch'
    | 'Centroid'
    | 'Sample'
    | 'Invariant'
    | 'Restrict'
    | 'Aliased'
    //| 'Volatile'
    | 'Constant'
    | 'Coherent'
    | 'NonWritable'
    | 'NonReadable'
	// | 'Uniform'
    | 'UniformId'
    | 'SaturatedConversion'
    | 'Stream'
    | 'Location'
    | 'Component'
    | 'Index'
    | 'Binding'
    | 'DescriptorSet'
    | 'Offset'
    | 'XfbBuffer'
    | 'XfbStride'
    | 'FuncParamAttr'
    | 'FPRoundingMode'
    | 'FPFastMathMode'
    | 'LinkageAttributes'
    | 'NoContraction'
    | 'InputAttachmentIndex'
    | 'Alignment'
    | 'MaxByteOffset'
    | 'AlignmentId'
    | 'MaxByteOffsetId'
    | 'NoSignedWrap'
    | 'NoUnsignedWrap'
    | 'WeightTextureQCOM'
    | 'BlockMatchTextureQCOM'
    | 'ExplicitInterpAMD'
    | 'NodeSharesPayloadLimitsWithAMDX'
    | 'NodeMaxPayloadsAMDX'
    | 'TrackFinishWritingAMDX'
    | 'PayloadNodeNameAMDX'
    | 'OverrideCoverageNV'
    | 'PassthroughNV'
    | 'ViewportRelativeNV'
    | 'SecondaryViewportRelativeNV'
    | 'PerPrimitiveNV'
    | 'PerPrimitiveEXT'
    | 'PerViewNV'
    | 'PerTaskNV'
    | 'PerVertexKHR'
    | 'PerVertexNV'
    | 'NonUniform'
    | 'NonUniformEXT'
    | 'RestrictPointer'
    | 'RestrictPointerEXT'
    | 'AliasedPointer'
    | 'AliasedPointerEXT'
    | 'HitObjectShaderRecordBufferNV'
    | 'BindlessSamplerNV'
    | 'BindlessImageNV'
    | 'BoundSamplerNV'
    | 'BoundImageNV'
    | 'SIMTCallINTEL'
    | 'ReferencedIndirectlyINTEL'
    | 'ClobberINTEL'
    | 'SideEffectsINTEL'
    | 'VectorComputeVariableINTEL'
    | 'FuncParamIOKindINTEL'
    | 'VectorComputeFunctionINTEL'
    | 'StackCallINTEL'
    | 'GlobalVariableOffsetINTEL'
    | 'CounterBuffer'
    | 'HlslCounterBufferGOOGLE'
    | 'UserSemantic'
    | 'HlslSemanticGOOGLE'
    | 'UserTypeGOOGLE'
    | 'FunctionRoundingModeINTEL'
    | 'FunctionDenormModeINTEL'
    | 'RegisterINTEL'
    | 'MemoryINTEL'
    | 'NumbanksINTEL'
    | 'BankwidthINTEL'
    | 'MaxPrivateCopiesINTEL'
    | 'SinglepumpINTEL'
    | 'DoublepumpINTEL'
    | 'MaxReplicatesINTEL'
    | 'SimpleDualPortINTEL'
    | 'MergeINTEL'
    | 'BankBitsINTEL'
    | 'ForcePow2DepthINTEL'
    | 'StridesizeINTEL'
    | 'WordsizeINTEL'
    | 'TrueDualPortINTEL'
    | 'BurstCoalesceINTEL'
    | 'CacheSizeINTEL'
    | 'DontStaticallyCoalesceINTEL'
    | 'PrefetchINTEL'
    | 'StallEnableINTEL'
    | 'FuseLoopsInFunctionINTEL'
    | 'MathOpDSPModeINTEL'
    | 'AliasScopeINTEL'
    | 'NoAliasINTEL'
    | 'InitiationIntervalINTEL'
    | 'MaxConcurrencyINTEL'
    | 'PipelineEnableINTEL'
    | 'BufferLocationINTEL'
    | 'IOPipeStorageINTEL'
    | 'FunctionFloatingPointModeINTEL'
    | 'SingleElementVectorINTEL'
    | 'VectorComputeCallableFunctionINTEL'
    | 'MediaBlockIOINTEL'
    | 'InitModeINTEL'
    | 'ImplementInRegisterMapINTEL'
    | 'HostAccessINTEL'
    | 'FPMaxErrorDecorationINTEL'
    | 'LatencyControlLabelINTEL'
    | 'LatencyControlConstraintINTEL'
    | 'ConduitKernelArgumentINTEL'
    | 'RegisterMapKernelArgumentINTEL'
    | 'MMHostInterfaceAddressWidthINTEL'
    | 'MMHostInterfaceDataWidthINTEL'
    | 'MMHostInterfaceLatencyINTEL'
    | 'MMHostInterfaceReadWriteModeINTEL'
    | 'MMHostInterfaceMaxBurstINTEL'
    | 'MMHostInterfaceWaitRequestINTEL'
    | 'StableKernelArgumentINTEL'
    | 'CacheControlLoadINTEL'
    | 'CacheControlStoreINTEL'
    ;

OP_CODE: [a-zA-Z_][a-zA-Z_0-9]*;
ID: '%' [a-zA-Z_0-9]+;
EQUALS: '=';
ESCAPE_SEQUENCE: '\\' . ;
LITERAL: [0-9]+ | '"' (~["\\] | ESCAPE_SEQUENCE)* '"';

